diff --git a/tools/clang/scripts/build.py b/tools/clang/scripts/build.py
index 71f75fded5..d51e124ff6 100755
--- a/tools/clang/scripts/build.py
+++ b/tools/clang/scripts/build.py
@@ -800,7 +800,7 @@ def main():
   cxxflags = []
   ldflags = []
 
-  targets = 'AArch64;ARM;LoongArch;Mips;PowerPC;RISCV;SystemZ;WebAssembly;X86'
+  targets = 'AArch64'
   projects = 'clang;lld;clang-tools-extra'
   if args.bolt:
     projects += ';bolt'
@@ -877,19 +877,6 @@ def main():
     if sys.platform.startswith('linux'):
       base_cmake_args += [ '-DLLVM_STATIC_LINK_CXX_STDLIB=ON' ]
 
-  if sys.platform.startswith('linux'):
-    sysroot_amd64 = DownloadDebianSysroot('amd64', args.skip_checkout)
-    sysroot_i386 = DownloadDebianSysroot('i386', args.skip_checkout)
-    sysroot_arm = DownloadDebianSysroot('arm', args.skip_checkout)
-    sysroot_arm64 = DownloadDebianSysroot('arm64', args.skip_checkout)
-
-    # Add the sysroot to base_cmake_args.
-    if platform.machine() == 'aarch64':
-      base_cmake_args.append('-DCMAKE_SYSROOT=' + sysroot_arm64)
-    else:
-      # amd64 is the default toolchain.
-      base_cmake_args.append('-DCMAKE_SYSROOT=' + sysroot_amd64)
-
   if sys.platform == 'win32':
     AddGnuWinToPath()
 
@@ -965,10 +952,7 @@ def main():
       # COMPILER_RT_BUILD_BUILTINS).
       runtimes.append('compiler-rt')
 
-    bootstrap_targets = 'X86'
-    if sys.platform == 'darwin':
-      # Need ARM and AArch64 for building the ios clang_rt.
-      bootstrap_targets += ';ARM;AArch64'
+    bootstrap_targets = 'AArch64'
     bootstrap_args = base_cmake_args + ccache_cmake_args + [
         '-DLLVM_TARGETS_TO_BUILD=' + bootstrap_targets,
         '-DLLVM_ENABLE_PROJECTS=clang;lld',
@@ -1193,52 +1177,15 @@ def main():
   runtimes_triples_args = {}
 
   if sys.platform.startswith('linux'):
-    runtimes_triples_args['i386-unknown-linux-gnu'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_i386,
-            # TODO(crbug.com/40242553): pass proper flags to i386 tests so they compile correctly
-            'LLVM_INCLUDE_TESTS=OFF',
-        ],
-        "profile":
-        True,
-        "sanitizers":
-        True,
-    }
-    runtimes_triples_args['x86_64-unknown-linux-gnu'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_amd64,
-        ],
-        "profile": True,
-        "sanitizers": True,
-    }
-    # Using "armv7a-unknown-linux-gnueabhihf" confuses the compiler-rt
-    # builtins build, since compiler-rt/cmake/builtin-config-ix.cmake
-    # doesn't include "armv7a" in its `ARM32` list.
-    # TODO(thakis): It seems to work for everything else though, see try
-    # results on
-    # https://chromium-review.googlesource.com/c/chromium/src/+/3702739/4
-    # Maybe it should work for builtins too?
-    runtimes_triples_args['armv7-unknown-linux-gnueabihf'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_arm,
-            # Can't run tests on x86 host.
-            'LLVM_INCLUDE_TESTS=OFF',
-        ],
-        "profile":
-        True,
-        "sanitizers":
-        True,
-    }
     runtimes_triples_args['aarch64-unknown-linux-gnu'] = {
         "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_arm64,
             # Can't run tests on x86 host.
             'LLVM_INCLUDE_TESTS=OFF',
         ],
         "profile":
-        True,
+        False,
         "sanitizers":
-        True,
+        False,
     }
   elif sys.platform == 'win32':
     sysroot = os.path.dirname(os.path.dirname(GetWinSDKDir()))
